<?xml version="1.0"?>
<launch>
  <arg name="rviz" default="true"/>
  <arg name="monitor_namespace" default="demo_sensor_simulator"/>
  <arg name="monitored_namespace" default=""/>
  <arg name="robot_description" default="robot_description"/>
  <arg name="discrete_plugin" default="BulletDiscreteBVHManager"/>
  <arg name="continuous_plugin" default="BulletCastBVHManager"/>
  <arg name="joint_state_topic" default=""/>
  <arg name="publish_environment" default="false"/>

  <!-- Load universal robot description format (URDF) -->
  <param name="$(arg robot_description)" command="$(find xacro)/xacro --inorder '$(find tesseract_support)/urdf/lbr_iiwa_14_r820.xacro'" />

  <!-- The semantic description that corresponds to the URDF -->
  <param name="$(arg robot_description)_semantic" textfile="$(find tesseract_support)/urdf/lbr_iiwa_14_r820.srdf" />

  <!-- If needed, broadcast static tf for robot root -->
  <node pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_0" args="0 0 0 0 0 0 world base_link 100" />

  <node pkg="tesseract_sensor_simulator" type="tesseract_sensor_simulator_node" name="tesseract_sensor_simulator_node" output="screen">
    <param name="robot_description" type="string" value="$(arg robot_description)"/>
    <param name="discrete_plugin" type="string" value="$(arg discrete_plugin)"/>
    <param name="continuous_plugin" type="string" value="$(arg continuous_plugin)"/>
    <param name="joint_state_topic" type="string" value="$(arg joint_state_topic)"/>
    <param name="monitor_namespace" type="string" value="$(arg monitor_namespace)"/>
    <param name="monitored_namespace" type="string" value="$(arg monitored_namespace)"/>
    <param name="publish_environment" type="bool" value="$(arg publish_environment)"/>
  </node>

  <!-- Launch visualization -->
  <node if="$(arg rviz)" pkg="rviz" type="rviz" name="sensor_simulator_rviz" args="-d $(find tesseract_sensor_simulator)/config/demo.rviz" />

  <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" respawn="true"/>

  <node pkg="ros_gz_bridge" type="parameter_bridge" name="parameter_bridge"
     args="/gz/sensors/examples/camera_sensor@sensor_msgs/Image@gz.msgs.Image
           /gz/sensors/examples/depth_sensor@sensor_msgs/Image@gz.msgs.Image
           /gz/sensors/examples/depth_sensor/points@sensor_msgs/PointCloud2@gz.msgs.PointCloudPacked" />
</launch>
